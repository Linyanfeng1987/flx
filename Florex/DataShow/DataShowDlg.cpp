
// DataShowDlg.cpp : 实现文件
//

#include "stdafx.h"
#include "DataShow.h"
#include "DataShowDlg.h"
#include "afxdialogex.h"

#include <afxpriv.h>
#include "windows.h"


#ifdef _DEBUGshowSpace
#define new DEBUG_NEW
#endif

#include "PubFun.h"
#include "db/DbObj.h"
#include "LogObj.h"

// 用于应用程序“关于”菜单项的 CAboutDlg 对话框
class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
	enum { IDD = IDD_ABOUTBOX };

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()


// CDataShowDlg 对话框



CDataShowDlg::CDataShowDlg(CWnd* pParent /*=NULL*/)
	: CDialogEx(CDataShowDlg::IDD, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CDataShowDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_COMBO1, showTypeBox);
	DDX_Control(pDX, IDC_EDIT2, showSpace);
	DDX_Control(pDX, IDC_EDIT1, SqlEdit);
}

BEGIN_MESSAGE_MAP(CDataShowDlg, CDialogEx)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDOK, &CDataShowDlg::OnBnClickedOk)
	ON_BN_CLICKED(IDC_BUTTON1, &CDataShowDlg::OnBnClickedButton1)
END_MESSAGE_MAP()


// CDataShowDlg 消息处理程序

BOOL CDataShowDlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// 将“关于...”菜单项添加到系统菜单中。

	// IDM_ABOUTBOX 必须在系统命令范围内。
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 设置此对话框的图标。当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标
	showSpace.SetReadOnly(TRUE);

	//CRect rect;
	//showSpace.GetRect(&rect);
	//showSpace.setShowRect(rect.Width(), rect.Height());

	// TODO: 在此添加额外的初始化代码
	//MoveWindow(100, 100, 1200, 600);
	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}

void CDataShowDlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialogEx::OnSysCommand(nID, lParam);
	}
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。

void CDataShowDlg::OnPaint()
{
	CPaintDC dc(this); // 用于绘制的设备上下文
	if (IsIconic())
	{
		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作区矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标
//显示。
HCURSOR CDataShowDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}

void CDataShowDlg::OnBnClickedOk()
{
	// TODO: 在此添加控件通知处理程序代码
	//%%%%
}


void CDataShowDlg::OnBnClickedButton1()
{
	// TODO: 在此添加控件通知处理程序代码
	USES_CONVERSION;
	CString cstr;
	SqlEdit.GetWindowTextW(cstr);
	
	string userStr = T2A(cstr);	

	list<string> strRows = PubFun::split(userStr, string("\n"));
	PTableStruct tableStruct = nullptr;
	for (string strRow : strRows)
	{
		list<string> oneInfo = PubFun::split(strRow, string(";"));
		auto iter = oneInfo.begin();
		string tagName = *iter;
		iter++;
		string strType = *iter;
		iter++;
		string sql = *iter;
		if (strType == "average")
		{
			tableStruct = CCurRateAverageStruct::instence();
		}
		else
		{
			tableStruct = CCurRateStruct::instence();
		}
		getSqlData(sql.c_str(), tagName, tableStruct);
	}

	showSpace.spOnPaint();
}

void CDataShowDlg::getSqlData( const char* sql, string tagName, PTableStruct tableStruct )
{
	PTable resTable = newTable(tableStruct);
	CDbObj& db = CDbObj::instance();
	try
	{
		db.selectData(sql, resTable);
		showSpace.addRateValueTable(tagName, resTable);
	}
	catch (CStrException &e)
	{
		CLogObj::instance().error(string(e.what()));	
		//MessageBox(_T(e.what),NULL,MB_OK); //显示消息框
	}
}
